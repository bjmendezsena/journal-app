{"version":3,"sources":["firebase/firebase-config.js","types/types.js","components/actions/ui.js","helpers/fileUpload.js","helpers/loadNotes.js","components/actions/notes.js","components/actions/auth.js","hooks/useForm.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/NothingSelected.js","components/journal/JournalScreen.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","components/routers/AuthRouter.js","components/routers/PrivateRoute.js","components/routers/PublicRoute.js","components/loadingComponent/LoadingComponent.js","components/routers/AppRouter.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","JournalApp.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","types","setError","err","type","payload","removeError","finishLogin","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","cloudResp","secure_url","loadNotes","uid","collection","get","notesSnap","notes","forEach","snapChild","push","id","data","activeNote","note","addNewNote","setNotes","startLoadingNotes","dispatch","startSaveNote","getState","url","noteToFirestore","doc","update","refreshNote","Swal","fire","title","deleteNote","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","login","displayName","catch","message","logout","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","name","value","NotesAppBar","useDispatch","active","useSelector","state","dataString","moment","date","format","className","style","display","onChange","e","files","text","allowOutsideClick","onBeforeOpen","showLoading","fileUrl","startUploading","onClick","document","querySelector","click","NoteScreen","formValue","activeId","useRef","useEffect","current","placeholder","autoComplete","src","alt","delete","startdeleting","JournalEntry","noteDate","backgroundSize","backgroundImage","JournalEntries","map","key","Sidebar","signOut","newNote","Date","getTime","add","NothingSelected","JournalScreen","LoginScreen","ui","msgError","loading","formValues","isFormValid","length","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","password2","handleForm","trim","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","LoadingComponent","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"wPAeEA,IAASC,cAVY,CACnBC,OAAQ,0CACRC,WAAY,yCACZC,YAAa,gDACbC,UAAW,yBACXC,cAAe,qCACfC,kBAAmB,eACnBC,MAAO,8CAKT,IAAMC,EAAKT,IAASU,YAEdC,EAAqB,IAAIX,IAASY,KAAKC,mB,iBCnBlCC,EAED,eAFCA,EAGD,gBAHCA,EAOG,iBAPHA,EAQM,oBARNA,EAUO,qBAVPA,EAWQ,sBAXRA,EAaI,mBAbJA,EAcI,0BAdJA,EAeE,qBAfFA,EAgBK,4BAhBLA,EAkBI,sBAlBJA,EAmBY,0BChBZC,EAAW,SAACC,GAAD,MAAU,CAC9BC,KAAMH,EACNI,QAASF,IAEAG,EAAc,iBAAO,CAC9BF,KAAMH,IAKGM,EAAc,iBAAO,CAC9BH,KAAMH,I,OCdGO,EAAU,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,4DACL,uDAEXC,EAAW,IAAIC,UAEZC,OAAO,gBAAiB,iBACjCF,EAASE,OAAO,OAAQJ,GANF,kBASCK,MARN,sDAQsB,CAC/BC,OAAQ,OACRC,KAAML,IAXQ,YASZM,EATY,QAcTC,GAdS,kCAeUD,EAAKE,OAff,eAeRC,EAfQ,yBAgBPA,EAAUC,YAhBH,yBAkBFJ,EAAKE,OAlBH,oJAAH,sDCKVG,EAAS,uCAAG,WAAMC,GAAN,iBAAAb,EAAA,sEAEGd,EAAG4B,WAAH,UAAiBD,EAAjB,mBAAsCE,MAFzC,cAEfC,EAFe,OAIfC,EAAQ,GAEdD,EAAUE,SAAQ,SAAAC,GACdF,EAAMG,KAAN,aACIC,GAAIF,EAAUE,IACXF,EAAUG,YATA,kBAadL,GAbc,2CAAH,sDCsBTM,EAAa,SAACF,EAAIG,GAAL,MAAe,CACrC9B,KAAMH,EACNI,QAAQ,aACJ0B,MACGG,KAIEC,EAAa,SAACJ,EAAIG,GAAL,MAAe,CACrC9B,KAAMH,EACNI,QAAQ,aACJ0B,MAAOG,KAIFE,EAAW,SAACT,GAAD,MAAY,CAChCvB,KAAMH,EACNI,QAASsB,IAGAU,EAAoB,SAACd,GAC9B,8CAAO,WAAOe,GAAP,eAAA5B,EAAA,sEACiBY,EAAUC,GAD3B,OACGI,EADH,OAEHW,EAASF,EAAST,IAFf,2CAAP,uDAMSY,EAAgB,SAACL,GAC1B,8CAAO,WAAOI,EAAUE,GAAjB,iBAAA9B,EAAA,6DAEKa,EAAQiB,IAAWzC,KAAnBwB,IAEHW,EAAKO,YACCP,EAAKO,WAGVC,EARH,eAQ0BR,IACNH,GATpB,SAWGnC,EAAG+C,IAAH,UAAUpB,EAAV,0BAA+BW,EAAKH,KAAMa,OAAOF,GAXpD,OAaHJ,EAASO,EAAYX,EAAKH,GAAIW,IAC9BI,IAAKC,KAAK,QAASb,EAAKc,MAAO,WAd5B,2CAAP,yDAmBSH,EAAc,SAACd,EAAIG,GAAL,MAAe,CACtC9B,KAAMH,EACNI,QAAQ,CACJ0B,KACAG,KAAK,aACDH,MACGG,MAkCFe,EAAa,SAAClB,GAAD,MAAS,CAC/B3B,KAAMH,EACNI,QAAS0B,IC7GAmB,EAA0B,SAACC,EAAOC,GAC3C,OAAO,SAACd,GAEJA,EJAyB,CAC7BlC,KAAMH,IIAFd,IAASY,OAAOsD,2BAA2BF,EAAOC,GAC7CE,MAAK,YAAc,IAAZC,EAAW,EAAXA,KACJjB,EAASkB,EAAMD,EAAKhC,IAAKgC,EAAKE,cAC9BnB,EAAS/B,QACVmD,OAAM,SAAAvD,GACLmC,EAAS/B,KACTuC,IAAKC,KAAK,QAAS5C,EAAIwD,QAAS,cAwBnCH,EAAQ,SAACjC,EAAKkC,GAAN,MAAuB,CACpCrD,KAAMH,EACNI,QAAS,CACLkB,MACAkC,iBAYCG,EAAS,iBAAO,CACzBxD,KAAMH,I,QCvDG4D,EAAU,WAAwB,IAAvBC,EAAsB,uDAAP,GAAO,EAEdC,mBAASD,GAFK,mBAEnCE,EAFmC,KAE3BC,EAF2B,KAIpCC,EAAQ,WAAiC,IAAhCC,EAA+B,uDAAhBL,EAC1BG,EAAUE,IAERC,EAAoB,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACxBJ,EAAU,2BACHD,GADE,kBAEJK,EAAOC,KAAOD,EAAOE,UAI9B,MAAO,CAACP,EAAQI,EAAmBF,I,iBCZ1BM,EAAc,WAEvB,IAAMlC,EAAWmC,cAETC,EAAWC,aAAY,SAAAC,GAAK,OAAIA,EAAMjD,SAAtC+C,OAEFG,EADWC,IAAOJ,EAAOK,MACHC,OAAO,gBAenC,OACI,yBAAKC,UAAU,iBACX,8BAAOJ,GAEP,2BACI9C,GAAG,eACH3B,KAAK,OACLkE,KAAO,OACPY,MAAO,CAAEC,QAAS,QAClBC,SAfa,SAACC,GACtB,IAAM5E,EAAO4E,EAAEhB,OAAOiB,MAAM,GACzB7E,GACC6B,EH8DkB,SAAC7B,GAC3B,8CAAO,WAAM6B,EAAUE,GAAhB,iBAAA9B,EAAA,6DACauB,EAAeO,IAAWb,MAAlC+C,OACR5B,IAAKC,KAAK,CACNC,MAAO,eACPuC,KAAM,cACNC,mBAAmB,EACnBC,aAAc,WACV3C,IAAK4C,iBAPV,SAUmBlF,EAAWC,GAV9B,OAUGkF,EAVH,OAYH1D,EAAWQ,IAAMkD,EAEjBrD,EAASC,EAAcN,IAdpB,2CAAP,wDG/DiB2D,CAAenF,OAcxB,6BACI,4BACIwE,UAAU,wCACVY,QAxBW,WACvBC,SAASC,cAAc,iBAAiBC,UAqBhC,WAOA,4BAAQf,UAAU,wCAAwCY,QAhCnD,WACfvD,EAASC,EAAcmC,MA+Bf,WCvCHuB,EAAa,WAEtB,IAAM3D,EAAWmC,cACDvC,EAASyC,aAAY,SAAAC,GAAK,OAAIA,EAAMjD,SAA5C+C,OAHoB,EAIkBb,EAAQ3B,GAJ1B,mBAIrBgE,EAJqB,KAIV9B,EAJU,KAISF,EAJT,KAKpBlB,EAAoBkD,EAApBlD,MAAOhC,EAAakF,EAAblF,KAAOe,EAAMmE,EAANnE,GAEhBoE,EAAWC,iBAAOlE,EAAKH,IAC7BsE,qBAAU,WACFnE,EAAKH,KAAOoE,EAASG,UACrBpC,EAAMhC,GACNiE,EAASG,QAAUpE,EAAKH,MAE7B,CAACG,EAAMgC,IAEVmC,qBAAU,WACN/D,EAASL,EAAWiE,EAAUnE,GAAX,eAAoBmE,OACxC,CAACA,EAAW5D,IAMf,OACI,yBAAK2C,UAAU,uBACX,kBAAC,EAAD,MACA,yBAAKA,UAAU,kBAEX,2BACI7E,KAAK,OACLmG,YAAY,qBACZtB,UAAU,qBACVuB,aAAa,MACblC,KAAK,QACLC,MAAOvB,EACPoC,SAAUhB,IAGd,8BACImC,YAAY,qBACZtB,UAAU,kBACVV,MAAOvD,EACPsD,KAAK,OACLc,SAAUhB,IAMTlC,EAAKO,KAEL,yBAAKwC,UAAU,gBACZ,yBACAA,UAAY,wCACRwB,IAAKvE,EAAKO,IACViE,IAAI,aAMpB,4BACIzB,UAAU,qDACVY,QA5CS,WACjBvD,EJ8EqB,SAACP,GAC1B,8CAAO,WAAOO,EAAUE,GAAjB,eAAA9B,EAAA,6DACGa,EAAMiB,IAAWzC,KAAKwB,IADzB,SAGG3B,EAAG+C,IAAH,UAAUpB,EAAV,0BAA+BQ,IAAM4E,SAHxC,OAKHrE,EAASW,EAAWlB,IALjB,2CAAP,wDI/Ea6E,CAAc7E,MAyCnB,YC9DC8E,GAAe,SAAC,GAAoC,IAAlC9E,EAAiC,EAAjCA,GAAIgD,EAA6B,EAA7BA,KAAM/B,EAAuB,EAAvBA,MAAOhC,EAAgB,EAAhBA,KAAMyB,EAAU,EAAVA,IAE5CqE,EAAWhC,IAAOC,GAElBzC,EAAWmC,cAWjB,OACI,yBAAKQ,UAAU,+DAA+DY,QAVzD,WACrBvD,EAASL,EAAWF,EAAG,CACnBgD,OACA/B,QACAhC,OACAyB,WAOGA,GAAO,yBACFwC,UAAU,yBACVC,MAAO,CACH6B,eAAgB,QAChBC,gBAAgB,OAAD,OAASvE,EAAT,QAK3B,yBAAKwC,UAAU,uBACX,uBAAGA,UAAU,wBACRjC,GAEL,uBAAGiC,UAAU,0BACRjE,IAGT,yBAAKiE,UAAU,2BACX,8BAAO6B,EAAS9B,OAAO,SACvB,4BAAK8B,EAAS9B,OAAO,UCtCxBiC,GAAiB,WAAO,IAGzBtF,EAAUgD,aAAY,SAAAC,GAAK,OAAIA,EAAMjD,SAArCA,MAGR,OACI,yBAAKsD,UAAU,oBAEPtD,EAAMuF,KAAI,SAAAhF,GAAI,OACV,kBAAC,GAAD,eACIiF,IAAKjF,EAAKH,IACNG,SCVfkF,GAAU,WACnB,IAAM9E,EAAWmC,cAETH,EAASK,aAAY,SAAAC,GAAK,OAAIA,EAAM7E,QAApCuE,KAWR,OACI,2BAAOW,UAAU,oBACb,yBAAKA,UAAU,2BACX,wBAAIA,UAAU,+CACV,uBAAGA,UAAU,uDACb,0BAAMA,UAAY,2CAAlB,IAA8DX,IAElE,4BACIW,UAAU,wCACVY,QAjBK,WACjBvD,ENqCJ,uCAAO,WAAOA,GAAP,SAAA5B,EAAA,sEACGvB,IAASY,OAAOsH,UADnB,OAEH/E,EAASsB,KACTtB,EDkE0B,CAC9BlC,KAAKH,ICtEE,2CAAP,yDMvBY,WAOJ,yBACIgF,UAAU,qBACVY,QApBS,WACjBvD,EPTJ,uCAAO,WAAOA,EAAUE,GAAjB,mBAAA9B,EAAA,6DAEKa,EAAQiB,IAAWzC,KAAnBwB,IAEF+F,EAAU,CACZtE,MAAO,GACPhC,KAAM,GACN+D,MAAM,IAAIwC,MAAOC,WAPlB,SAUe5H,EAAG4B,WAAH,UAAiBD,EAAjB,mBAAsCkG,IAAIH,GAVzD,OAUG3E,EAVH,OAYHL,EAASL,EAAWU,EAAIZ,GAAIuF,IAC5BhF,EAASH,EAAWQ,EAAIZ,GAAIuF,IAbzB,2CAAP,2DO8BY,uBAAGrC,UAAU,uEACb,uBAAGA,UAAU,yCAAb,cAGJ,kBAAC,GAAD,QCxCCyC,GAAkB,WAC3B,OACI,yBAAKzC,UAAY,yBACb,uBAAGA,UAAY,uCAAf,mBAEI,6BAFJ,uBAMA,uBAAGA,UAAY,iECLd0C,GAAgB,WAAO,IAEzBjD,EAAUC,aAAY,SAAAC,GAAK,OAAIA,EAAMjD,SAArC+C,OAGP,OACI,yBAAKO,UAAY,2EACb,kBAAC,GAAD,MAEA,8BAEKP,EACG,kBAAC,EAAD,MACA,kBAAC,GAAD,SCZPkD,GAAc,WAGvB,IAAMtF,EAAWmC,cAHY,EAKCE,aAAY,SAAAC,GAAK,OAAIA,EAAMiD,MAAjDC,EALqB,EAKrBA,SAAUC,EALW,EAKXA,QALW,EASWlE,EAAQ,CAC5CV,MAAO,GACPC,SAAU,KAXe,mBAStB4E,EATsB,KASV5D,EATU,KAcrBjB,EAAoB6E,EAApB7E,MAAOC,EAAa4E,EAAb5E,SAcT6E,EAAc,WAChB,OAAqB,IAAjB9E,EAAM+E,QACN5F,EAASpC,EAAS,8BACX,IAEXoC,EAAShC,MACF,IAEX,OACI,yBAAK2E,UAAU,+DACX,0BAAMkD,SAtBM,SAAC9C,GACjBA,EAAE+C,iBAEEH,KACA3F,EAASY,EAAwBC,EAAOC,KAkBX6B,UAAU,OACnC,yBAAKA,UAAU,WACX,wBAAIA,UAAU,eAAd,SAEA,2BACI7E,KAAK,OACLmG,YAAY,QACZjC,KAAK,QACLC,MAAOpB,EACPiC,SAAUhB,EACVa,UAAU,cACVuB,aAAa,QAGjB,2BACIpG,KAAK,WACLmG,YAAY,WACZhC,MAAOnB,EACPgC,SAAUhB,EACVE,KAAK,WACLW,UAAU,gBAGd,4BACIA,UAAU,wBACV7E,KAAK,SACLiI,SAAUN,GAHd,SAQA,yBACI9C,UAAU,wBACVY,QA/CM,WACtBvD,GTTG,SAACA,GACJnD,IAASY,OAAOuI,gBAAgBxI,GACvBwD,MAAK,YAAY,IAAVC,EAAS,EAATA,KACJjB,EAASkB,EAAMD,EAAKhC,IAAKgC,EAAKE,sBSsD1B,yDACA,yBACIwB,UAAU,cAEV,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,eACX,uBAAGA,UAAU,oBAIrB,uBAAGA,UAAU,YACT,qDAIZ,kBAAC,IAAD,CACIA,UAAU,OACVsD,GAAG,kBAFP,sBAOIT,GAAY,yBAAK7C,UAAU,2DAA2D6C,O,oBC9FjGU,GAAiB,WAE1B,IAAMlG,EAAWmC,cAGTqD,EADMnD,aAAY,SAAAC,GAAK,OAAIA,KACRiD,GAAnBC,SALwB,EAOAjE,EAAQ,CACpCS,KAAM,GACNnB,MAAO,GACPC,SAAU,GACVqF,UAAW,KAXiB,mBAOzBvC,EAPyB,KAOdwC,EAPc,KAcxBpE,EAAqC4B,EAArC5B,KAAMnB,EAA+B+C,EAA/B/C,MAAOC,EAAwB8C,EAAxB9C,SAAUqF,EAAcvC,EAAduC,UAUzBR,EAAc,WAChB,OAA2B,IAAvB3D,EAAKqE,OAAOT,QACZ5F,EAASpC,EAAS,qBACX,GACC0I,KAAUC,QAAQ1F,GAGnBC,IAAaqF,GAAarF,EAAS8E,OAAS,GACnD5F,EAASpC,EAAS,mEACX,IAEXoC,EAAShC,MACF,IAPHgC,EAASpC,EAAS,wBACX,IASf,OACI,yBAAK+E,UAAU,+DACX,0BAAMkD,SAzBS,SAAC9C,GACpBA,EAAE+C,iBACEH,KACA3F,EVIsC,SAACa,EAAOC,EAAUkB,GAChE,OAAO,SAAChC,GACJnD,IAASY,OAAO+I,+BAA+B3F,EAAOC,GACrDE,KADD,uCACM,6BAAA5C,EAAA,6DAAQ6C,EAAR,EAAQA,KAAR,SACIA,EAAKwF,cAAc,CAACtF,YAAaa,IADrC,OAEFhC,EAASkB,EAAMD,EAAKhC,IAAKgC,EAAKE,cAF5B,2CADN,uDAIGC,OAAM,SAAAvD,GAAG,OAAI2C,IAAKC,KAAK,QAAS5C,EAAIwD,QAAS,aUVnCqF,CAAmC7F,EAAOC,EAAUkB,KAsB7BW,UAAU,OACtC,yBAAKA,UAAY,WACb,wBAAIA,UAAU,eAAd,YAIA,2BACI7E,KAAK,OACLmG,YAAY,OACZjC,KAAK,OACLC,MAAOD,EACPc,SAAUsD,EACVzD,UAAU,cACVuB,aAAa,QAEjB,2BACIpG,KAAK,OACLmG,YAAY,QACZjC,KAAK,QACLC,MAAOpB,EACPiC,SAAUsD,EACVzD,UAAU,cACVuB,aAAa,QAGjB,2BACIpG,KAAK,WACLmG,YAAY,WACZjC,KAAK,WACLC,MAAOnB,EACPgC,SAAUsD,EACVzD,UAAU,gBAEd,2BACI7E,KAAK,WACLmG,YAAY,mBACZjC,KAAK,YACLC,MAAOkE,EACPrD,SAAUsD,EACVzD,UAAU,gBAGd,4BACIA,UAAU,wBACV7E,KAAK,UAFT,YAOA,kBAAC,IAAD,CACI6E,UAAU,OACVsD,GAAG,eAFP,wBAQIT,GAAY,yBAAK7C,UAAU,2DAA2D6C,OCnGjGmB,GAAa,WACtB,OACI,yBAAKhE,UAAU,cACX,yBAAKA,UAAU,uBAEX,kBAAC,IAAD,KACI,kBAAC,IAAD,CACIiE,OAAK,EACLC,KAAK,cACLC,UAAWxB,KAEf,kBAAC,IAAD,CACIsB,OAAK,EACLC,KAAK,iBACLC,UAAWZ,KAEf,kBAAC,IAAD,CAAUD,GAAG,oB,SCjBpBc,GAAe,SAAC,GAItB,IAHHC,EAGE,EAHFA,gBACWC,EAET,EAFFH,UACGI,EACD,gDAGF,OACI,kBAAC,IAAD,iBAAYA,EAAZ,CACIJ,UAAY,SAACK,GAAD,OACNH,EACM,kBAACC,EAAeE,GAChB,kBAAC,IAAD,CAAUlB,GAAG,qBCZxBmB,GAAc,SAAC,GAIrB,IAHHJ,EAGE,EAHFA,gBACWC,EAET,EAFFH,UACGI,EACD,gDAEF,OACI,kBAAC,IAAD,iBAAYA,EAAZ,CACIJ,UAAY,SAACK,GAAD,OACNH,EACK,kBAAC,IAAD,CAAUf,GAAG,MACZ,kBAACgB,EAAeE,QCf3BE,GAAmB,WAC5B,OACI,yBAAK1E,UAAY,eACb,yBAAKA,UAAY,SACjB,yBAAKA,UAAY,SACjB,yBAAKA,UAAY,SACjB,yBAAKA,UAAY,WCShB2E,GAAY,WAErB,IAAMtH,EAAWmC,cAFU,EAIKV,oBAAS,GAJd,mBAIpB8F,EAJoB,KAIVC,EAJU,OAMS/F,oBAAS,GANlB,mBAMpBgG,EANoB,KAMRC,EANQ,KAwB3B,OAhBA3D,qBAAU,WACNlH,IAASY,OAAOkK,mBAAhB,uCAAmC,WAAM1G,GAAN,SAAA7C,EAAA,uDAC/B,OAAG6C,QAAH,IAAGA,OAAH,EAAGA,EAAMhC,MACLe,EAASkB,EAAMD,EAAKhC,IAAKgC,EAAKE,cAC9BuG,GAAc,GAEd1H,EAASD,EAAkBkB,EAAKhC,OAGhCyI,GAAc,GAElBF,GAAY,GAVmB,2CAAnC,yDAaD,CAACxH,EAAUwH,EAAaE,IAExBH,EAEK,kBAAC,GAAD,MAKJ,kBAAC,IAAD,KACI,6BACI,kBAAC,IAAD,KACI,kBAAC,GAAD,CACIV,KAAK,QACLC,UAAWH,GACXK,gBAAmBS,IAGvB,kBAAC,GAAD,CACIb,OAAK,EACLC,KAAK,IACLC,UAAWzB,GACX2B,gBAAmBS,IAEvB,kBAAC,IAAD,CAAUxB,GAAG,oB,2BC5D3BzE,GAAe,CACjBnC,MAAO,GACP+C,OAAQ,MCHNZ,GAAe,CACjBiE,SAAS,EACTD,SAAS,MCIPoC,GAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,KAErGC,GAAWC,aAAgB,CAC7BxK,KCPuB,WAAyB,IAAxB6E,EAAuB,uDAAf,GAAI4F,EAAW,uCAG/C,OAAQA,EAAOpK,MACX,KAAKH,EACD,MAAO,CACHsB,IAAIiJ,EAAOnK,QAAQkB,IACnB+C,KAAKkG,EAAOnK,QAAQoD,aAE5B,KAAKxD,EACD,MAAO,GACX,QACI,OAAO2E,IDJfiD,GDJqB,WAAmC,IAAlCjD,EAAiC,uDAAzBd,GAAc0G,EAAW,uCACvD,OAAQA,EAAOpK,MACX,KAAKH,EACD,OAAO,2BACA2E,GADP,IAEIkD,SAAU0C,EAAOnK,UAEzB,KAAKJ,EACD,OAAO,2BACA2E,GADP,IAEIkD,SAAU,OAElB,KAAK7H,EACD,OAAO,2BACA2E,GADP,IAEImD,SAAS,IAEjB,KAAK9H,EACD,OAAO,2BACA2E,GADP,IAEImD,SAAS,IAGjB,QACI,OAAOnD,ICnBfjD,MFLwB,WAAmC,IAAlCiD,EAAiC,uDAAzBd,GAAc0G,EAAW,uCAC1D,OAAQA,EAAOpK,MAEX,KAAKH,EACD,OAAO,2BACA2E,GADP,IAEIF,OAAO,eACA8F,EAAOnK,WAItB,KAAKJ,EACD,OAAO,2BACA2E,GADP,IAEIjD,MAAM,CAAC6I,EAAOnK,SAAT,oBAAqBuE,EAAMjD,UAExC,KAAK1B,EACD,OAAO,2BACA2E,GADP,IAEIjD,MAAM,aAAK6I,EAAOnK,WAE1B,KAAKJ,EACD,OAAO,2BACA2E,GADP,IAEIjD,MAAOiD,EAAMjD,MAAMuF,KACf,SAAAhF,GAAI,OAAIA,EAAKH,KAAOyI,EAAOnK,QAAQ0B,GAC7ByI,EAAOnK,QAAQ6B,KACfA,OAGlB,KAAKjC,EACD,OAAO,2BACA2E,GADP,IAEIF,OAAQ,KACR/C,MAAOiD,EAAMjD,MAAM8I,QAAO,SAAAvI,GAAI,OAAIA,EAAKH,KAAOyI,EAAOnK,aAI7D,KAAKJ,EACD,OAAO6D,GACX,QACI,OAAOc,MEjCN8F,GAAQC,aACjBL,GACAJ,GACIU,aAAiBC,QEbZC,GAAa,WACtB,OACI,kBAAC,IAAD,CAAUJ,MAASA,IACf,kBAAC,GAAD,QCDZK,IAASC,OACL,kBAAC,GAAD,MAEFlF,SAASmF,eAAe,U","file":"static/js/main.5d8a46ee.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDrJarCnLvkJW3wB2cIoEpc4r7bwYG2FEY\",\r\n    authDomain: \"react-app-cursos-4d07d.firebaseapp.com\",\r\n    databaseURL: \"https://react-app-cursos-4d07d.firebaseio.com\",\r\n    projectId: \"react-app-cursos-4d07d\",\r\n    storageBucket: \"react-app-cursos-4d07d.appspot.com\",\r\n    messagingSenderId: \"362936404211\",\r\n    appId: \"1:362936404211:web:ca2ecf82a74dc2fd14cf86\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const db = firebase.firestore();\r\n\r\n  const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n\r\n  export {\r\n      db,\r\n      googleAuthProvider,\r\n      firebase\r\n  }\r\n\r\n","export const types = {\r\n    //Login screen\r\n    login:  '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n\r\n    //Register screen\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n\r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdated: '[Notes] Updated note save',\r\n    notesFileUrl: '[Notes] Updated image url',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\r\n}","import { types } from \"../../types/types\"\r\n\r\n\r\nexport const setError = (err) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n});\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError,\r\n});\r\nexport const startLogin = () => ({\r\n    type: types.uiStartLoading,\r\n});\r\nexport const finishLogin = () => ({\r\n    type: types.uiFinishLoading,\r\n});\r\n\r\n","export const fileUpload = async (file) => {\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/bjmendezsena/upload';\r\n\r\n    const formData = new FormData();\r\n\r\n    formData.append('upload_preset', 'react-journal');\r\n    formData.append('file', file);\r\n\r\n    try {\r\n        const resp = await fetch(cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if (resp.ok) {\r\n            const cloudResp = await resp.json();\r\n            return cloudResp.secure_url;\r\n        } else {\r\n            throw await resp.json();\r\n        }\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n\r\n}","import { db } from \"../firebase/firebase-config\"\r\n\r\n\r\n\r\n\r\nexport const loadNotes = async(uid) => {\r\n\r\n    const notesSnap = await db.collection(`${uid}/journal/notes`).get();\r\n\r\n    const notes = [];\r\n\r\n    notesSnap.forEach(snapChild => {\r\n        notes.push({\r\n            id: snapChild.id,\r\n            ...snapChild.data()\r\n        });\r\n    });\r\n\r\n    return notes;\r\n}\r\n\r\n\r\n","import Swal from 'sweetalert2';\r\nimport { db } from \"../../firebase/firebase-config\";\r\nimport { fileUpload } from '../../helpers/fileUpload';\r\nimport { loadNotes } from \"../../helpers/loadNotes\";\r\nimport { types } from \"../../types/types\";\r\n\r\n\r\nexport const startNewNote = () => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const doc = await db.collection(`${uid}/journal/notes`).add(newNote);\r\n\r\n        dispatch(activeNote(doc.id, newNote));\r\n        dispatch(addNewNote(doc.id, newNote))\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const activeNote = (id, note) => ({\r\n    type: types.notesActive,\r\n    payload: {\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const addNewNote = (id, note) => ({\r\n    type: types.notesAddNew,\r\n    payload:{\r\n        id, ...note\r\n    }\r\n});\r\n\r\nexport const setNotes = (notes) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n});\r\n\r\nexport const startLoadingNotes = (uid) => {\r\n    return async (dispatch) => {\r\n        const notes = await loadNotes(uid);\r\n        dispatch(setNotes(notes));\r\n    }\r\n}\r\n\r\nexport const startSaveNote = (note) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { uid } = getState().auth;\r\n\r\n        if (!note.url) {\r\n            delete note.url\r\n        }\r\n\r\n        const noteToFirestore = { ...note };\r\n        delete noteToFirestore.id;\r\n\r\n        await db.doc(`${uid}/journal/notes/${note.id}`).update(noteToFirestore);\r\n\r\n        dispatch(refreshNote(note.id, noteToFirestore));\r\n        Swal.fire('Saved', note.title, 'success');\r\n    }\r\n}\r\n\r\n\r\nexport const refreshNote = (id, note) => ({\r\n    type: types.notesUpdated,\r\n    payload:{\r\n        id,\r\n        note:{\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n});\r\n\r\nexport const startUploading = (file) => {\r\n    return async(dispatch, getState) =>{\r\n        const { active: activeNote } = getState().notes;\r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait',\r\n            allowOutsideClick: false,\r\n            onBeforeOpen: () =>{\r\n                Swal.showLoading();\r\n            }\r\n        });\r\n        const fileUrl = await fileUpload(file);\r\n\r\n        activeNote.url = fileUrl;\r\n\r\n        dispatch(startSaveNote(activeNote));\r\n    }\r\n}\r\n\r\nexport const startdeleting = (id) => {\r\n    return async (dispatch, getState) => {\r\n        const uid = getState().auth.uid;\r\n\r\n        await db.doc(`${uid}/journal/notes/${id}`).delete();\r\n\r\n        dispatch(deleteNote(id));\r\n    }\r\n}\r\n\r\nexport const deleteNote = (id) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n});\r\n\r\nexport const notesLogout = () => ({\r\n    type:types.notesLogoutCleaning\r\n});","import Swal from 'sweetalert2'\r\nimport { types } from \"../../types/types\";\r\nimport {firebase, googleAuthProvider} from '../../firebase/firebase-config';\r\nimport { startLogin, finishLogin } from \"./ui\";\r\nimport { notesLogout } from './notes';\r\n\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return (dispatch) =>{\r\n\r\n        dispatch(startLogin());\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then(({user})  => {\r\n                dispatch(login(user.uid, user.displayName));\r\n                dispatch(finishLogin());\r\n            }).catch(err => {\r\n                dispatch(finishLogin());\r\n                Swal.fire('Error', err.message, 'error');\r\n            });\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n                .then(({user}) =>{\r\n                    dispatch(login(user.uid, user.displayName))\r\n                })\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n    return (dispatch) => {\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n        .then(async ({user}) =>{\r\n            await user.updateProfile({displayName: name});\r\n            dispatch(login(user.uid, user.displayName))\r\n        }).catch(err => Swal.fire('Error', err.message, 'error'));\r\n    }\r\n}\r\n\r\nexport const login = (uid, displayName) => ({\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n});\r\n\r\nexport const startLogout = () => {\r\n    return async (dispatch) =>{\r\n        await firebase.auth().signOut();\r\n        dispatch(logout());\r\n        dispatch(notesLogout());\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n})\r\n\r\n\r\n\r\n","\r\nimport { useState } from \"react\"\r\n\r\nexport const useForm = (initialState = {}) => {\r\n   \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = (newFormState = initialState) =>{\r\n        setValues(newFormState);\r\n    }\r\n    const handleInputChange = ({target}) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        });\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n}","import React from 'react';\r\nimport moment from 'moment';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startSaveNote, startUploading } from '../actions/notes';\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { active } = useSelector(state => state.notes);\r\n    const noteDate = moment(active.date);\r\n    const dataString = noteDate.format('MMMM Do YYYY')\r\n\r\n    const handleSave = () => {\r\n        dispatch(startSaveNote(active));\r\n    }\r\n    const handlePictureClick = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if(file){\r\n            dispatch(startUploading(file));\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>{dataString}</span>\r\n\r\n            <input\r\n                id=\"fileSelector\"\r\n                type=\"file\"\r\n                name = \"file\"\r\n                style={{ display: 'none' }}\r\n                onChange={handleFileChange}\r\n            />\r\n            <div>\r\n                <button\r\n                    className=\"btn animate__animated animate__rollIn\"\r\n                    onClick={handlePictureClick}\r\n                >\r\n                    Picture\r\n                </button>\r\n\r\n                <button className=\"btn animate__animated animate__rollIn\" onClick={handleSave}>\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { activeNote, startdeleting } from '../actions/notes';\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { active: note } = useSelector(state => state.notes);\r\n    const [formValue, handleInputChange, reset] = useForm(note);\r\n    const { title, body , id} = formValue;\r\n\r\n    const activeId = useRef(note.id);\r\n    useEffect(() => {\r\n        if (note.id !== activeId.current) {\r\n            reset(note);\r\n            activeId.current = note.id;\r\n        }\r\n    }, [note, reset]);\r\n\r\n    useEffect(() => {\r\n        dispatch(activeNote(formValue.id, { ...formValue }));\r\n    }, [formValue, dispatch]);\r\n\r\n    const handleDelete = () => {\r\n        dispatch(startdeleting(id));\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n            <NotesAppBar />\r\n            <div className=\"notes__content\">\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    name='title'\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <textarea\r\n                    placeholder=\"What happend today\"\r\n                    className=\"notes__textarea\"\r\n                    value={body}\r\n                    name='body'\r\n                    onChange={handleInputChange}\r\n                >\r\n\r\n                </textarea>\r\n\r\n                {\r\n                    (note.url)\r\n                    &&\r\n                    (<div className=\"notes__image\">\r\n                        <img\r\n                        className = \"animate__animated animate__fadeInDown\"\r\n                            src={note.url}\r\n                            alt=\"imagen\"\r\n                        />\r\n                    </div>)\r\n                }\r\n            </div>\r\n\r\n            <button\r\n                className=\"btn animate__animated animate__fadeInUp btn-danger\"\r\n                onClick = {handleDelete}\r\n            >\r\n            Delete\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../actions/notes';\r\n\r\nexport const JournalEntry = ({ id, date, title, body, url }) => {\r\n\r\n    const noteDate = moment(date);\r\n    \r\n    const dispatch = useDispatch();\r\n\r\n    const handleEntryClick = () => {\r\n        dispatch(activeNote(id,{\r\n            date,\r\n            title,\r\n            body,\r\n            url\r\n        }));\r\n    }\r\n\r\n    return (\r\n        <div className=\"journal__entry pointer animate__animated animate__fadeInDown\" onClick = {handleEntryClick}>\r\n            {\r\n               url && <div\r\n                    className=\"journal__entry-picture\"\r\n                    style={{\r\n                        backgroundSize: 'cover',\r\n                        backgroundImage: `url(${url})`\r\n                    }}\r\n                ></div>\r\n            }\r\n\r\n            <div className=\"journal__entry-body\">\r\n                <p className=\"journal__entry-title\">\r\n                    {title}\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    {body}\r\n                </p>\r\n            </div>\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{noteDate.format('dddd')}</span>\r\n                <h4>{noteDate.format('Do')}</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux';\r\nimport { JournalEntry } from './JournalEntry';\r\n\r\nexport const JournalEntries = () => {\r\n\r\n\r\n    const { notes } = useSelector(state => state.notes);\r\n\r\n\r\n    return (\r\n        <div className=\"journal__entries\">\r\n            {\r\n                notes.map(note => (\r\n                    <JournalEntry\r\n                        key={note.id}\r\n                        {...note}\r\n\r\n                    />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../actions/auth';\r\nimport { startNewNote } from '../actions/notes';\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const { name } = useSelector(state => state.auth)\r\n\r\n\r\n    const handleLogout = () => {\r\n        dispatch(startLogout());\r\n    }\r\n\r\n    const handleAddNew = () =>{\r\n        dispatch(startNewNote());\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n            <div className=\"journal__sidebar-navbar\">\r\n                <h3 className=\"mt-5 animate__animated animate__slideInDown\">\r\n                    <i className=\"far fa-moon animate__animated animate__slideInLeft\" />\r\n                    <span className = \"animate__animated animate__slideInRight\"> {name}</span>\r\n                </h3>\r\n                <button\r\n                    className=\"btn animate__animated animate__rollIn\"\r\n                    onClick={handleLogout}\r\n                >\r\n                    Logout\r\n                </button>\r\n            </div>\r\n            <div\r\n                className=\"journal__new-entry\"\r\n                onClick = {handleAddNew}\r\n            >\r\n                <i className=\"far fa-calendar-plus fa-5x animate__animated animate__jackInTheBox\" />\r\n                <p className=\"m-5 animate__animated animate__rollIn\">New entry</p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n        </aside>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className = \"nothing__main-content\">\r\n            <p className = \"animate__animated animate__fadeInUp\">\r\n                Select something\r\n                <br/>\r\n                or create an entry!\r\n            </p>\r\n\r\n            <i className = \"far fa-star fa-4x mt-5 animate__animated animate__rotateIn\"/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NoteScreen } from '../notes/NoteScreen';\r\nimport { Sidebar } from './Sidebar';\r\nimport {NothingSelected} from './NothingSelected';\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const {active} = useSelector(state => state.notes);\r\n\r\n    \r\n    return (\r\n        <div className = \"journal__main-content animate__animated animate__fadeIn animate__faster\">\r\n            <Sidebar/>\r\n\r\n            <main>\r\n            {\r\n                (active)\r\n                   ?<NoteScreen/>\r\n                   :<NothingSelected/>   \r\n            }\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { setError, removeError } from '../actions/ui';\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../actions/auth';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { msgError, loading } = useSelector(state => state.ui);\r\n\r\n\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (isFormValid()) {\r\n            dispatch(startLoginEmailPassword(email, password));\r\n        }\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch(startGoogleLogin());\r\n    }\r\n\r\n    const isFormValid = () => {\r\n        if (email.length === 0) {\r\n            dispatch(setError('You need to put an email'));\r\n            return false;\r\n        }\r\n        dispatch(removeError());\r\n        return true;\r\n    }\r\n    return (\r\n        <div className='container animate__animated animate__fadeIn animate__faster'>\r\n            <form onSubmit={handleLogin} className=\"box\">\r\n                <div className=\"content\">\r\n                    <h1 className=\"auth__title\">Login</h1>\r\n\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Email\"\r\n                        name=\"email\"\r\n                        value={email}\r\n                        onChange={handleInputChange}\r\n                        className=\"auth__input\"\r\n                        autoComplete=\"off\"\r\n                    />\r\n\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        value={password}\r\n                        onChange={handleInputChange}\r\n                        name=\"password\"\r\n                        className=\"auth__input\"\r\n                    />\r\n\r\n                    <button\r\n                        className=\"btn-primary btn-block\"\r\n                        type=\"submit\"\r\n                        disabled={loading}\r\n                    >\r\n                        Login\r\n            </button>\r\n\r\n                    <div\r\n                        className=\"auth__social-networks\"\r\n                        onClick={handleGoogleLogin}\r\n                    >\r\n                        <p>Login with social networks</p>\r\n                        <div\r\n                            className=\"google-btn\"\r\n                        >\r\n                            <div className=\"google-icon-wrapper\">\r\n                                <div className=\"google-icon\">\r\n                                    <i className=\"fab fa-google\" />\r\n                                </div>\r\n\r\n                            </div>\r\n                            <p className=\"btn-text\">\r\n                                <b>Sign in with google</b>\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <Link\r\n                        className=\"link\"\r\n                        to=\"/auth/register\"\r\n                    >\r\n                        Create new account\r\n                </Link>\r\n                    {\r\n                        msgError && <div className=\"auth__alert-error animate__animated animate__fadeInDown\">{msgError}</div>\r\n                    }\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport validator from 'validator';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setError, removeError } from '../actions/ui';\r\nimport { startRegisterWithEmailPasswordName } from '../actions/auth';\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const state = useSelector(state => state);\r\n    const { msgError } = state.ui;\r\n\r\n    const [formValue, handleForm] = useForm({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n        password2: ''\r\n    });\r\n\r\n    const { name, email, password, password2 } = formValue;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        if (isFormValid()) {\r\n            dispatch(startRegisterWithEmailPasswordName(email, password, name))\r\n        }\r\n\r\n    }\r\n\r\n    const isFormValid = () => {\r\n        if (name.trim().length === 0) {\r\n            dispatch(setError('Name is equired'));\r\n            return false;\r\n        } else if (!validator.isEmail(email)) {\r\n            dispatch(setError('Email is not valid'));\r\n            return false;\r\n        } else if (password !== password2 || password.length < 5) {\r\n            dispatch(setError('Password should be at least 6 characters and match each other'));\r\n            return false;\r\n        }\r\n        dispatch(removeError());\r\n        return true;\r\n    }\r\n\r\n    return (\r\n        <div className='container animate__animated animate__fadeIn animate__faster'>\r\n            <form onSubmit={handleRegister} className=\"box\">\r\n                <div className = \"content\">\r\n                    <h1 className=\"auth__title\">Register</h1>\r\n\r\n                    \r\n\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Name\"\r\n                        name=\"name\"\r\n                        value={name}\r\n                        onChange={handleForm}\r\n                        className=\"auth__input\"\r\n                        autoComplete=\"off\"\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Email\"\r\n                        name=\"email\"\r\n                        value={email}\r\n                        onChange={handleForm}\r\n                        className=\"auth__input\"\r\n                        autoComplete=\"off\"\r\n                    />\r\n\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        value={password}\r\n                        onChange={handleForm}\r\n                        className=\"auth__input\"\r\n                    />\r\n                    <input\r\n                        type=\"password\"\r\n                        placeholder=\"Confirm password\"\r\n                        name=\"password2\"\r\n                        value={password2}\r\n                        onChange={handleForm}\r\n                        className=\"auth__input\"\r\n                    />\r\n\r\n                    <button\r\n                        className=\"btn-primary btn-block\"\r\n                        type=\"submit\"\r\n\r\n                    >\r\n                        Register\r\n                    </button>\r\n                    <Link\r\n                        className=\"link\"\r\n                        to=\"/auth/login\"\r\n                    >\r\n                        Allready registered?\r\n                    </Link>\r\n\r\n                    {\r\n                        msgError && <div className=\"auth__alert-error animate__animated animate__fadeInDown\">{msgError}</div>\r\n                    }\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\n\r\n\r\nimport { LoginScreen } from '../auth/LoginScreen';\r\nimport { RegisterScreen } from '../auth/RegisterScreen';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n\r\n                <Switch>\r\n                    <Route\r\n                        exact\r\n                        path='/auth/login'\r\n                        component={LoginScreen}\r\n                    />\r\n                    <Route\r\n                        exact\r\n                        path='/auth/register'\r\n                        component={RegisterScreen}\r\n                    />\r\n                    <Redirect to='/auth/login' />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    \n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Component { ...props } /> )\n                    : ( <Redirect to=\"/auth/login\" /> )\n            )}\n        \n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ?( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react'\r\n\r\nexport const LoadingComponent = () => {\r\n    return (\r\n        <div className = \"box-loading\">\r\n            <div className = \"b b1\"></div>\r\n            <div className = \"b b2\"></div>\r\n            <div className = \"b b3\"></div>\r\n            <div className = \"b b4\"></div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport {firebase} from '../../firebase/firebase-config'\r\nimport { login } from '../actions/auth';\r\nimport { JournalScreen } from '../journal/JournalScreen';\r\nimport { AuthRouter } from './AuthRouter';\r\nimport {PrivateRoute} from './PrivateRoute';\r\nimport {PublicRoute} from './PublicRoute';\r\nimport {startLoadingNotes} from '../actions/notes'\r\nimport { LoadingComponent } from '../loadingComponent/LoadingComponent';\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [checking, setChecking] = useState(true);\r\n    \r\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged(async(user) => {\r\n            if(user?.uid){\r\n                dispatch(login(user.uid, user.displayName));\r\n                setIsLoggedIn(true);\r\n\r\n                dispatch(startLoadingNotes(user.uid));\r\n\r\n            }else{\r\n                setIsLoggedIn(false);\r\n            }\r\n            setChecking(false);\r\n        });\r\n       \r\n    }, [dispatch, setChecking, setIsLoggedIn])\r\n\r\n    if(checking){\r\n        return (\r\n            <LoadingComponent/>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        path='/auth'\r\n                        component={AuthRouter}\r\n                        isAuthenticated = {isLoggedIn}\r\n                    />\r\n\r\n                    <PrivateRoute\r\n                        exact\r\n                        path='/'\r\n                        component={JournalScreen}\r\n                        isAuthenticated = {isLoggedIn}\r\n                    />\r\n                    <Redirect to='/auth/login' />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes:[action.payload, ...state.notes]\r\n            }\r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload]\r\n            }\r\n        case types.notesUpdated:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter(note => note.id !== action.payload)\r\n            }\r\n\r\n\r\n        case types.notesLogoutCleaning:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError:null\r\n}\r\n\r\n// ui\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import {createStore, combineReducers, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { authReducer } from '../reducers/authReducer';\r\nimport { notesReducer } from '../reducers/notesReducer';\r\nimport { uiReducer } from '../reducers/uiReducer';\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n});\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n);","import { types } from \"../types/types\";\r\n\r\n\r\n\r\nexport const authReducer = (state = {}, action) => {\r\n\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid:action.payload.uid,\r\n                name:action.payload.displayName\r\n            }\r\n        case types.logout:\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport { Provider } from 'react-redux'\r\n\r\nimport { AppRouter } from './components/routers/AppRouter';\r\nimport { store } from './store/store';\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store = {store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/styles.scss';\n\n\nimport { JournalApp } from './JournalApp';\n\n\nReactDOM.render(\n    <JournalApp />,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}